package document

var libraryList = []Library{
	{
		ID:          "1",
		Name:        "rs/zerolog",
		URL:         "https://github.com/rs/zerolog",
		Tags:        []string{"logger", "golang", "zero allocation", "performance"},
		Description: "rs/zerolog is a fast and simple logger for Go. It is designed to be zero allocation and high performance, making it ideal for high-throughput applications.",
	},
	{
		ID:          "2",
		Name:        "hashicorp/hcl",
		URL:         "github.com/hashicorp/hcl/v2",
		Tags:        []string{"configuration", "parser", "golang"},
		Description: "HCL (HashiCorp Configuration Language) is a configuration language designed for humans. It is used by HashiCorp tools like Terraform and Consul, Vault.",
	},
	{
		ID:   "3",
		Name: "hashicorp/vault-client-go",
		URL:  "github.com/hashicorp/vault-client-go",
		Tags: []string{"vault", "client", "golang", "password", "secret", "token", "secret management"},
	},
	{
		ID:          "4",
		Name:        "google/go-tpm",
		URL:         "github.com/google/go-tpm",
		Tags:        []string{"tpm", "trusted platform module", "golang"},
		Description: "The go-tpm library provides a Go interface to the Trusted Platform Module (TPM) 2.0. It allows developers to interact with TPMs for secure key storage and cryptographic operations.",
	},
	{
		ID:          "5",
		Name:        "fatedier/frp",
		URL:         "github.com/fatedier/frp",
		Tags:        []string{"frp", "reverse proxy", "golang", "network", "proxy", "tunnel", "TCP", "UDP", "HTTP", "HTTPS", "P2P", "NAT"},
		Description: "frp is a fast reverse proxy to help you expose a local server behind a NAT or firewall to the public internet. It supports various protocols like TCP, UDP, HTTP, and HTTPS.",
	},
	{
		ID:          "6",
		Name:        "go-gitea/gitea",
		URL:         "github.com/go-gitea/gitea",
		Tags:        []string{"git", "gitea", "golang", "self-hosted", "repository", "CI/CD", "issue tracking", "pull request", "image registry"},
		Description: "Gitea is a self-hosted Git service that provides a lightweight and easy-to-use interface for managing Git repositories. It includes features like issue tracking, pull requests, and CI/CD integration.",
	},
	{
		ID:          "7",
		Name:        "pocketbase/pocketbase",
		URL:         "github.com/pocketbase/pocketbase",
		Tags:        []string{"database", "golang", "self-hosted", "SQLite", "RESTful API", "real-time"},
		Description: "PocketBase is a lightweight, self-hosted SQLite database with a RESTful API and real-time capabilities. It is designed for small to medium-sized applications and provides an easy-to-use interface for managing data.",
	},
	{
		ID:          "8",
		Name:        "pingcap/tidb",
		URL:         "github.com/pingcap/tidb",
		Tags:        []string{"database", "golang", "distributed", "SQL", "MySQL", "TiDB"},
		Description: "TiDB is a distributed SQL database that provides horizontal scalability, strong consistency, and high availability. It is compatible with the MySQL protocol and can be used as a drop-in replacement for MySQL.",
	},
	{
		ID:          "9",
		Name:        "gofiber/fiber",
		URL:         "github.com/gofiber/fiber",
		Tags:        []string{"web framework", "golang", "HTTP", "performance", "middleware"},
		Description: "Fiber is an Express-inspired web framework for Go that is designed for performance and ease of use. It provides a simple API for building web applications and includes middleware support for common tasks like authentication and logging.",
	},
	{
		ID:          "10",
		Name:        "charmbracelet/bubble",
		URL:         "github.com/charmbracelet/bubble",
		Tags:        []string{"terminal", "UI", "golang", "TUI", "CLI"},
		Description: "Bubble is a TUI (Text User Interface) library for Go that makes it easy to build interactive terminal applications. It provides a simple API for creating and managing UI components like buttons, forms, and tables.",
	},
	{
		ID:          "11",
		Name:        "zeromicro/go-zero",
		URL:         "github.com/zeromicro/go-zero",
		Tags:        []string{"microservices", "golang", "RPC", "RESTful API", "gRPC", "web framework"},
		Description: "go-zero is a web and RPC framework for Go that is designed for building microservices. It provides a simple API for creating and managing services, as well as support for gRPC and RESTful APIs.",
	},
	{
		ID:          "12",
		Name:        "wailsapp/wails",
		URL:         "github.com/wailsapp/wails",
		Tags:        []string{"desktop", "golang", "webview", "GUI", "cross-platform"},
		Description: "Wails is a lightweight framework for building desktop applications using Go and web technologies. It allows developers to create cross-platform applications with a native look and feel, using HTML, CSS, and JavaScript for the UI.",
	},
	{
		ID:          "13",
		Name:        "fyne-io/fyne",
		URL:         "github.com/fyne-io/fyne",
		Tags:        []string{"desktop", "golang", "GUI", "cross-platform", "mobile"},
		Description: "Fyne is an easy-to-use UI toolkit and app API written in Go. It is designed for building cross-platform applications with a native look and feel, supporting desktop and mobile platforms.",
	},
	{
		ID:          "14",
		Name:        "nsqio/nsq",
		URL:         "github.com/nsqio/nsq",
		Tags:        []string{"message queue", "golang", "distributed", "real-time", "pub/sub"},
		Description: "NSQ is a real-time distributed messaging platform designed to operate at scale, handling billions of messages per day. It provides a simple API for publishing and subscribing to messages, as well as support for message persistence and delivery guarantees.",
	},
	{
		ID:          "15",
		Name:        "gocolly/colly",
		URL:         "github.com/gocolly/colly",
		Tags:        []string{"web scraping", "golang", "crawler", "HTML", "DOM"},
		Description: "Colly is a powerful and easy-to-use web scraping framework for Go. It provides a simple API for crawling websites, extracting data, and handling common tasks like pagination and rate limiting.",
	},
	{
		ID:          "16",
		Name:        "urfave/cli/v2",
		URL:         "github.com/urfave/cli/v2",
		Tags:        []string{"command line", "golang", "CLI", "application", "flag"},
		Description: "urfave/cli is a simple and fast command line application framework for Go. It provides a simple API for creating command line applications, handling flags, and managing subcommands.",
	},
	{
		ID:          "17",
		Name:        "valyala/fasthttp",
		URL:         "github.com/valyala/fasthttp",
		Tags:        []string{"HTTP", "golang", "performance", "web server", "client"},
		Description: "fasthttp is a fast HTTP implementation for Go that is designed for high performance and low memory usage. It provides a simple API for building web servers and clients, with support for HTTP/1.x and HTTP/2.",
	},
	{
		ID:          "18",
		Name:        "micro/go-micro",
		URL:         "github.com/micro/go-micro",
		Tags:        []string{"microservices", "golang", "RPC", "service discovery", "load balancing"},
		Description: "go-micro is a microservices framework for Go that provides a simple API for building and managing microservices. It includes support for service discovery, load balancing, and RPC communication, making it easy to build scalable and resilient applications.",
	},
	{
		ID:          "19",
		Name:        "air-verse/air",
		URL:         "github.com/air-verse/air",
		Tags:        []string{"air", "golang", "development", "live reload", "hot reload"},
		Description: "Air is a live reload tool for Go applications that automatically reloads your application when you make changes to the code. It is designed to improve the development experience by providing instant feedback and reducing the time spent on manual restarts.",
	},
	{
		ID:          "20",
		Name:        "grpc-ecosystem/grpc-gateway",
		URL:         "github.com/grpc-ecosystem/grpc-gateway",
		Tags:        []string{"gRPC", "REST", "golang", "API gateway", "HTTP"},
		Description: "grpc-gateway is a plugin for gRPC that allows you to generate a reverse proxy server that translates a RESTful HTTP API into gRPC. It makes it easy to expose your gRPC services as RESTful APIs, allowing you to support both gRPC and HTTP clients.",
	},
	{
		ID:          "21",
		Name:        "qax-os/excelize",
		URL:         "github.com/qax-os/excelize",
		Tags:        []string{"Excel", "golang", "spreadsheet", "XLSX", "CSV"},
		Description: "Excelize is a library for reading and writing Excel files in Go. It supports the XLSX and CSV formats and provides a simple API for creating, modifying, and reading spreadsheet data.",
	},
	{
		ID:          "22",
		Name:        "go-playground/validator",
		URL:         "github.com/go-playground/validator/v10",
		Tags:        []string{"validation", "golang", "struct", "JSON", "form"},
		Description: "Validator is a Go library for validating struct fields and individual values. It provides a simple API for defining validation rules and supports various data types, including JSON, form, and XML.",
	},
	{
		ID:          "23",
		Name:        "emirpasic/gods",
		URL:         "github.com/emirpasic/gods",
		Tags:        []string{"data structure", "golang", "collection", "list", "stack", "queue", "tree", "hashmap"},
		Description: "gods is a Go library that provides a collection of data structures and algorithms. It includes implementations of common data structures like lists, stacks, queues, trees, and hashmaps, making it easy to work with complex data in Go.",
	},
	{
		ID:          "24",
		Name:        "julienschmidt/httprouter",
		URL:         "github.com/julienschmidt/httprouter",
		Tags:        []string{"HTTP", "golang", "router", "web framework", "performance"},
		Description: "httprouter is a lightweight and high-performance HTTP request router for Go. It is designed to be fast and efficient, making it ideal for building web applications and APIs.",
	},
	{
		ID:          "25",
		Name:        "golangci/golangci-lint",
		URL:         "github.com/golangci/golangci-lint",
		Tags:        []string{"lint", "golang", "static analysis", "code quality"},
		Description: "golangci-lint is a fast Go linters aggregator that runs multiple linters in parallel. It provides a simple command line interface for running linters and generating reports, making it easy to maintain code quality in Go projects.",
	},
	{
		ID:          "26",
		Name:        "google/gvisor",
		URL:         "github.com/google/gvisor",
		Tags:        []string{"sandbox", "container", "golang", "security", "kernel"},
		Description: "gVisor is a user-space kernel that provides a secure and efficient sandbox for running untrusted code. It is designed to be lightweight and easy to use, making it ideal for running containers and other untrusted applications.",
	},
	{
		ID:          "27",
		Name:        "tidwall/gjson",
		URL:         "github.com/tidwall/gjson",
		Tags:        []string{"JSON", "golang", "parser", "fast", "simple"},
		Description: "gjson is a fast and simple JSON parser for Go. It provides a simple API for parsing and manipulating JSON data, making it easy to work with complex JSON structures.",
	},
	{
		ID:          "28",
		Name:        "go-sql-driver/mysql",
		URL:         "github.com/go-sql-driver/mysql",
		Tags:        []string{"MySQL", "golang", "database", "driver", "SQL"},
		Description: "The MySQL driver for Go's database/sql package. It provides a simple and efficient way to interact with MySQL databases from Go applications.",
	},
	{
		ID:          "29",
		Name:        "sqlc-dev/sqlc",
		URL:         "github.com/sqlc-dev/sqlc",
		Tags:        []string{"SQL", "golang", "database", "ORM", "code generation", "PostgreSQL", "MySQL", "SQLite"},
		Description: "sqlc is a SQL compiler that generates type-safe Go code from SQL queries. It allows developers to write SQL queries and automatically generates the corresponding Go code, making it easy to work with databases in Go applications.",
	},
	{
		ID:          "30",
		Name:        "pion/webrtc",
		URL:         "github.com/pion/webrtc",
		Tags:        []string{"WebRTC", "golang", "real-time", "video", "audio", "peer-to-peer"},
		Description: "Pion WebRTC is a Go implementation of the WebRTC API. It allows developers to build real-time communication applications using video, audio, and data channels. Pion WebRTC is designed to be easy to use and integrate with existing Go applications.",
	},
	{
		ID:          "31",
		Name:        "goreleaser/goreleaser",
		URL:         "github.com/goreleaser/goreleaser",
		Tags:        []string{"release", "golang", "automation", "CI/CD", "GitHub"},
		Description: "Goreleaser is a release automation tool for Go applications. It simplifies the process of building, packaging, and distributing Go applications by automating common tasks like creating GitHub releases, generating changelogs, and building binaries for multiple platforms.",
	},
	{
		ID:          "32",
		Name:        "hypermodeinc/badger",
		URL:         "github.com/hypermodeinc/badger",
		Tags:        []string{"database", "golang", "key-value store", "embedded", "performance"},
		Description: "Badger is an embeddable, persistent key-value store written in Go. It is designed for high performance and low memory usage, making it ideal for applications that require fast access to large amounts of data.",
	},
	{
		ID:          "33",
		Name:        "bluenviron/mediamtx",
		URL:         "github.com/bluenviron/mediamtx",
		Tags:        []string{"RTSP", "golang", "media server", "streaming", "video", "audio"},
		Description: "MediaMTX is a media server for RTSP and WebRTC. It allows developers to build real-time streaming applications using video and audio, with support for multiple protocols and formats.",
	},
	{
		ID:          "34",
		Name:        "json-iterator/go",
		URL:         "github.com/json-iterator/go",
		Tags:        []string{"JSON", "golang", "parser", "performance", "fast"},
		Description: "json-iterator is a high-performance JSON parser for Go. It is designed to be faster and more efficient than the standard library's JSON package, making it ideal for applications that require fast JSON parsing and serialization.",
	},
	{
		ID:          "35",
		Name:        "panjf2000/gnet",
		URL:         "github.com/panjf2000/gnet",
		Tags:        []string{"network", "golang", "TCP", "UDP", "event-driven", "performance"},
		Description: "gnet is a high-performance, lightweight, and scalable network framework for Go. It is designed for building event-driven network applications and supports both TCP and UDP protocols. gnet is ideal for applications that require low latency and high throughput.",
	},
	{
		ID:          "36",
		Name:        "panjf2000/ants",
		URL:         "github.com/panjf2000/ants",
		Tags:        []string{"goroutine", "golang", "pool", "concurrency", "performance"},
		Description: "ants is a high-performance goroutine pool for Go. It provides a simple API for managing and reusing goroutines, making it easy to build concurrent applications without the overhead of creating and destroying goroutines.",
	},
	{
		ID:          "37",
		Name:        "netbirdio/netbird",
		URL:         "github.com/netbirdio/netbird",
		Tags:        []string{"VPN", "golang", "network", "security", "peer-to-peer"},
		Description: "Netbird is a VPN solution for secure remote access and networking. It allows users to create secure connections between devices and networks, providing a simple and efficient way to manage network security.",
	},
	{
		ID:          "38",
		Name:        "golang/groupcache",
		URL:         "github.com/golang/groupcache",
		Tags:        []string{"cache", "golang", "distributed", "memory", "performance"},
		Description: "groupcache is a caching library for Go that provides a simple API for creating and managing distributed caches. It is designed for high performance and low memory usage, making it ideal for applications that require fast access to cached data.",
	},
	{
		ID:          "39",
		Name:        "labstack/echo",
		URL:         "github.com/labstack/echo",
		Tags:        []string{"web framework", "golang", "HTTP", "performance", "middleware"},
		Description: "Echo is a high-performance, extensible web framework for Go. It is designed for building RESTful APIs and web applications, providing a simple API for routing, middleware, and request handling.",
	},
	{
		ID:          "40",
		Name:        "IBM/sarama",
		URL:         "github.com/IBM/sarama",
		Tags:        []string{"Kafka", "golang", "message queue", "distributed", "pub/sub"},
		Description: "Sarama is a Go client library for Apache Kafka. It provides a simple API for producing and consuming messages, as well as support for managing Kafka topics and partitions. Sarama is designed for high performance and low latency, making it ideal for building distributed applications that use Kafka.",
	},
	{
		ID:          "41",
		Name:        "jackc/pgx/v5",
		URL:         "github.com/jackc/pgx/v5",
		Tags:        []string{"PostgreSQL", "golang", "database", "driver", "SQL"},
		Description: "pgx is a PostgreSQL driver and toolkit for Go. It provides a simple and efficient way to interact with PostgreSQL databases from Go applications, with support for advanced features like connection pooling, prepared statements, and binary encoding.",
	},
	{
		ID:          "42",
		Name:        "shirou/gopsutil",
		URL:         "github.com/shirou/gopsutil",
		Tags:        []string{"system", "golang", "monitoring", "performance", "CPU", "memory", "disk"},
		Description: "gopsutil is a library for retrieving system and process information in Go. It provides a simple API for accessing CPU, memory, disk, and network statistics, making it easy to monitor system performance and resource usage.",
	},
	{
		ID:          "43",
		Name:        "henrygd/beszel",
		URL:         "github.com/henrygd/beszel",
		Tags:        []string{"beszel", "golang", "network", "security", "proxy"},
		Description: "Beszel is a high-performance, lightweight proxy server for Go. It is designed for building secure and efficient network applications, providing support for various protocols and features like load balancing, caching, and SSL termination.",
	},
	{
		ID:          "44",
		Name:        "quic-go/quic-go",
		URL:         "github.com/quic-go/quic-go",
		Tags:        []string{"QUIC", "golang", "HTTP/3", "network", "performance"},
		Description: "quic-go is a Go implementation of the QUIC transport protocol. It provides a simple API for building high-performance network applications using QUIC, with support for HTTP/3 and other features like connection migration and 0-RTT handshakes.",
	},
	{
		ID:   "45",
		Name: "blevesearch/bleve",
		URL:  "github.com/blevesearch/bleve",
		Tags: []string{"search", "golang", "indexing", "full-text search", "NoSQL"},
	},
	{
		ID:          "46",
		Name:        "99designs/gqlgen",
		URL:         "github.com/99designs/gqlgen",
		Tags:        []string{"GraphQL", "golang", "API", "code generation", "schema"},
		Description: "gqlgen is a Go library for building GraphQL APIs. It provides a simple API for defining GraphQL schemas and automatically generates the corresponding Go code, making it easy to build and maintain GraphQL APIs in Go.",
	},
	{
		ID:          "47",
		Name:        "DiceDB/dice",
		URL:         "github.com/DiceDB/dice",
		Tags:        []string{"database", "golang", "NoSQL", "key-value store", "performance"},
		Description: "DiceDB is a high-performance, distributed NoSQL database for Go. It is designed for low latency and high throughput, making it ideal for applications that require fast access to large amounts of data.",
	},
	{
		ID:          "48",
		Name:        "TykTechnologies/tyk",
		URL:         "github.com/TykTechnologies/tyk",
		Tags:        []string{"API gateway", "golang", "microservices", "security", "load balancing"},
		Description: "Tyk is an open-source API gateway and management platform for microservices. It provides a simple API for managing APIs, including features like authentication, rate limiting, and analytics.",
	},
	{
		ID:          "49",
		Name:        "fsnotify/fsnotify",
		URL:         "github.com/fsnotify/fsnotify",
		Tags:        []string{"file system", "golang", "monitoring", "events", "directory"},
		Description: "fsnotify is a Go library for monitoring file system events. It provides a simple API for watching files and directories for changes, making it easy to build applications that respond to file system events.",
	},
	{
		ID:          "50",
		Name:        "gwuhaolin/livego",
		URL:         "github.com/gwuhaolin/livego",
		Tags:        []string{"RTMP", "golang", "streaming", "video", "audio"},
		Description: "LiveGo is a Go library for building RTMP (Real-Time Messaging Protocol) servers and clients. It provides a simple API for streaming video and audio, making it easy to build real-time streaming applications.",
	},
	{
		ID:          "51",
		Name:        "bufbuild/buf",
		URL:         "github.com/bufbuild/buf",
		Tags:        []string{"gRPC", "protobuf", "golang", "code generation", "linting"},
		Description: "Buf is a tool for working with Protocol Buffers (protobuf) and gRPC. It provides a simple API for generating code, linting protobuf files, and managing dependencies, making it easy to work with protobuf and gRPC in Go applications.",
	},
	{
		ID:          "52",
		Name:        "a-h/templ",
		URL:         "github.com/a-h/templ",
		Tags:        []string{"templ", "golang", "template", "HTML", "performance", "code generation"},
		Description: "templ is a high-performance templating engine for Go. It is designed for building dynamic web applications and provides a simple API for rendering HTML templates with support for caching and precompilation.",
	},
	{
		ID:          "53",
		Name:        "AlexxIT/go2rtc",
		URL:         "github.com/AlexxIT/go2rtc",
		Tags:        []string{"RTSP", "golang", "streaming", "video", "audio"},
		Description: "go2rtc is a Go library for building real-time streaming applications using RTSP (Real-Time Streaming Protocol). It provides a simple API for streaming video and audio, making it easy to build real-time streaming applications.",
	},
	{
		ID:          "54",
		Name:        "pressly/goose",
		URL:         "github.com/pressly/goose",
		Tags:        []string{"database", "golang", "migration", "PostgreSQL", "MySQL", "SQLite"},
		Description: "goose is a database migration tool for Go. It provides a simple API for managing database migrations, making it easy to create, apply, and rollback migrations for various database systems like PostgreSQL, MySQL, and SQLite.",
	},
	{
		ID:          "55",
		Name:        "roadrunner-server/roadrunner",
		URL:         "github.com/roadrunner-server/roadrunner",
		Tags:        []string{"PHP", "golang", "worker", "performance", "HTTP", "RPC"},
		Description: "RoadRunner is a high-performance PHP application server, load balancer, and process manager written in Go. It is designed for running PHP applications in a fast and efficient manner, providing support for HTTP, gRPC, and other protocols.",
	},
	{
		ID:          "56",
		Name:        "golang-jwt/jwt",
		URL:         "github.com/golang-jwt/jwt",
		Tags:        []string{"jwt", "golang"},
		Description: "A Go implementation of JSON Web Tokens (JWT). It provides a simple API for creating, signing, and verifying JWTs, making it easy to implement authentication and authorization in Go applications.",
	},
	{
		ID:          "57",
		Name:        "bytedance/sonic",
		URL:         "github.com/bytedance/sonic",
		Tags:        []string{"JSON", "golang", "parser", "performance", "fast"},
		Description: "Sonic is a fast JSON parser and serializer for Go. It is designed to be faster and more efficient than the standard library's JSON package, making it ideal for applications that require high-performance JSON parsing and serialization.",
	},
	{
		ID:          "58",
		Name:        "Workiva/go-datastructures",
		URL:         "github.com/Workiva/go-datastructures",
		Tags:        []string{"data structure", "golang", "collection", "list", "stack", "queue", "tree", "hashmap", "lock-free"},
		Description: "A collection of high-performance data structures for Go. It includes implementations of common data structures like lists, stacks, queues, trees, and hashmaps, with a focus on performance and low memory usage.",
	},
	{
		ID:          "59",
		Name:        "dunglas/frankenphp",
		URL:         "github.com/dunglas/frankenphp",
		Tags:        []string{"PHP", "golang", "worker", "performance", "HTTP", "RPC"},
		Description: "FrankenPHP is a high-performance PHP application server, load balancer, and process manager written in Go. It is designed for running PHP applications in a fast and efficient manner, providing support for HTTP, gRPC, and other protocols.",
	},
	{
		ID:          "60",
		Name:        "fatih/color",
		URL:         "github.com/fatih/color",
		Tags:        []string{"color", "golang", "terminal", "CLI", "TUI"},
		Description: "Color is a Go library for coloring terminal output. It provides a simple API for adding colors and styles to text in the terminal, making it easy to create visually appealing command line applications.",
	},
	{
		ID:          "61",
		Name:        "pdfcpu/pdfcpu",
		URL:         "github.com/pdfcpu/pdfcpu",
		Tags:        []string{"PDF", "golang", "parser", "renderer", "manipulation"},
		Description: "pdfcpu is a Go library for parsing, rendering, and manipulating PDF files. It provides a simple API for working with PDF documents, making it easy to extract text, images, and other content from PDF files.",
	},
	{
		ID:          "62",
		Name:        "TomWright/dasel",
		URL:         "github.com/TomWright/dasel",
		Tags:        []string{"JSON", "YAML", "TOML", "XML", "golang", "data manipulation"},
		Description: "Dasel is a data selector and query language for JSON, YAML, TOML, XML, and other data formats. It provides a simple API for querying and manipulating data in various formats, making it easy to work with complex data structures.",
	},
	{
		ID:          "63",
		Name:        "go-echarts/go-echarts",
		URL:         "github.com/go-echarts/go-echarts/v2",
		Tags:        []string{"chart", "golang"},
		Description: "Go-Echarts is a Go library for creating interactive charts and visualizations. It provides a simple API for generating various types of charts, including line, bar, pie, and scatter plots, making it easy to create visually appealing data visualizations.",
	},
	{
		ID:          "64",
		Name:        "hybridgroup/gocv",
		URL:         "github.com/hybridgroup/gocv",
		Tags:        []string{"computer vision", "golang", "OpenCV", "image processing"},
		Description: "gocv is a Go library for computer vision and image processing using OpenCV. It provides a simple API for working with images, videos, and camera streams, making it easy to build computer vision applications in Go.",
	},
	{
		ID:          "65",
		Name:        "go-yaml/yaml",
		URL:         "github.com/go-yaml/yaml",
		Tags:        []string{"YAML", "golang", "parser", "serialization", "data format"},
		Description: "go-yaml is a Go library for parsing and serializing YAML data. It provides a simple API for working with YAML files and supports various features like anchors, aliases, and custom types, making it easy to work with YAML data in Go applications.",
	},
	{
		ID:          "66",
		Name:        "google/gops",
		URL:         "github.com/google/gops",
		Tags:        []string{"monitoring", "golang", "performance", "debugging", "profiling"},
		Description: "gops is a tool for monitoring and debugging Go applications. It provides a simple command line interface for inspecting running Go processes, including memory usage, goroutine stacks, and other performance metrics.",
	},
	{
		ID:          "67",
		Name:        "expr-lang/expr",
		URL:         "github.com/expr-lang/expr",
		Tags:        []string{"expression", "golang", "parser", "interpreter", "evaluation"},
		Description: "expr is a Go library for parsing and evaluating expressions. It provides a simple API for defining and executing expressions, making it easy to build applications that require dynamic expression evaluation.",
	},
	{
		ID:          "68",
		Name:        "grpc-ecosystem/go-grpc-middleware",
		URL:         "github.com/grpc-ecosystem/go-grpc-middleware",
		Tags:        []string{"gRPC", "golang", "middleware", "interceptor", "logging", "metrics"},
		Description: "A collection of gRPC middleware for Go, providing support for logging, metrics, authentication, and other common tasks. It makes it easy to add functionality to gRPC servers and clients without modifying the core code.",
	},
	{
		ID:   "69",
		Name: "go-git/go-git",
		URL:  "github.com/go-git/go-git/v5",
		Tags: []string{"git", "golang", "repository", "version control", "client"},
	},
	{
		ID:          "70",
		Name:        "gobwas/ws",
		URL:         "github.com/gobwas/ws",
		Tags:        []string{"WebSocket", "golang", "network", "performance", "client", "server"},
		Description: "gobwas/ws is a Go library for working with WebSocket connections. It provides a simple API for creating and managing WebSocket clients and servers, with support for various features like compression, ping/pong, and custom headers.",
	},
	{
		ID:          "71",
		Name:        "hypermodeinc/ristretto",
		URL:         "github.com/hypermodeinc/ristretto",
		Tags:        []string{"cache", "golang", "memory", "performance", "LRU"},
		Description: "Ristretto is a high-performance, memory-efficient cache library for Go. It is designed for low latency and high throughput, making it ideal for applications that require fast access to cached data. Ristretto uses a combination of LRU (Least Recently Used) and LFU (Least Frequently Used) eviction policies to optimize cache performance.",
	},
	{
		ID:          "72",
		Name:        "markbates/goth",
		URL:         "github.com/markbates/goth",
		Tags:        []string{"authentication", "golang", "OAuth", "OpenID", "social login"},
		Description: "Goth is a Go library for handling authentication with various providers like Google, Facebook, Twitter, and more. It provides a simple API for managing user sessions and integrating social login into Go applications.",
	},
	{
		ID:          "73",
		Name:        "net/http",
		URL:         "net/http",
		Tags:        []string{"HTTP", "golang", "web", "client", "server"},
		Description: "The net/http package is the standard library for HTTP in Go. It provides a simple API for building HTTP clients and servers, making it easy to create web applications and APIs in Go.",
	},
	{
		ID:          "74",
		Name:        "elastic/go-elasticsearch",
		URL:         "github.com/elastic/go-elasticsearch/v9",
		Tags:        []string{"Elasticsearch", "golang", "client", "search", "NoSQL"},
		Description: "The official Go client for Elasticsearch. It provides a simple API for interacting with Elasticsearch clusters, making it easy to build search and analytics applications in Go.",
	},
	{
		ID:          "75",
		Name:        "nats-io/nats.go",
		URL:         "github.com/nats-io/nats.go",
		Tags:        []string{"NATS", "golang", "message queue", "distributed", "pub/sub"},
		Description: "The official Go client for NATS, a lightweight and high-performance messaging system. It provides a simple API for publishing and subscribing to messages, making it easy to build distributed applications using NATS.",
	},
	{
		ID:          "76",
		Name:        "google/seesaw",
		URL:         "github.com/google/seesaw",
		Tags:        []string{"load balancer", "golang", "network", "performance", "distributed"},
		Description: "Seesaw is a load balancer and network proxy written in Go. It is designed for high performance and scalability, making it ideal for building distributed applications that require efficient load balancing and traffic management.",
	},
	{
		ID:          "77",
		Name:        "google/uuid",
		URL:         "github.com/google/uuid",
		Tags:        []string{"UUID", "golang", "identifier", "unique"},
		Description: "A Go library for generating and working with UUIDs (Universally Unique Identifiers). It provides a simple API for creating, parsing, and comparing UUIDs, making it easy to use UUIDs in Go applications.",
	},
	{
		ID:          "78",
		Name:        "c-bata/go-prompt",
		URL:         "github.com/c-bata/go-prompt",
		Tags:        []string{"CLI", "golang", "terminal", "TUI", "autocomplete"},
		Description: "A library for building command-line applications with advanced features like autocompletion and syntax highlighting. It provides a simple API for creating interactive command-line interfaces, making it easy to build user-friendly CLI applications.",
	},
	{
		ID:          "79",
		Name:        "tetratelabs/wazero",
		URL:         "github.com/tetratelabs/wazero",
		Tags:        []string{"WebAssembly", "golang", "runtime", "sandbox", "performance"},
		Description: "Wazero is a Go library for running WebAssembly (Wasm) modules. It provides a simple API for loading and executing Wasm modules, making it easy to build applications that require a secure and efficient runtime environment.",
	},
	{
		ID:          "80",
		Name:        "cockroachdb/pebble",
		URL:         "github.com/cockroachdb/pebble",
		Tags:        []string{"database", "golang", "key-value store", "embedded", "performance"},
		Description: "Pebble is a high-performance, embedded key-value store for Go. It is designed for low latency and high throughput, making it ideal for applications that require fast access to large amounts of data. Pebble is compatible with the RocksDB API, allowing developers to easily migrate from RocksDB to Pebble.",
	},
	{
		ID:          "81",
		Name:        "caddyserver/certmagic",
		URL:         "github.com/caddyserver/certmagic",
		Tags:        []string{"TLS", "golang", "certificate", "automation", "HTTPS"},
		Description: "CertMagic is a Go library for managing TLS certificates. It provides a simple API for obtaining, renewing, and serving TLS certificates automatically, making it easy to secure web applications with HTTPS.",
	},
	{
		ID:          "82",
		Name:        "coocood/freecache",
		URL:         "github.com/coocood/freecache",
		Tags:        []string{"cache", "golang", "memory", "performance", "LRU"},
		Description: "Freecache is a high-performance, memory-efficient cache library for Go. It is designed for low latency and high throughput, making it ideal for applications that require fast access to cached data. Freecache uses a combination of LRU (Least Recently Used) eviction policy and memory pooling to optimize cache performance.",
	},
	{
		ID:          "83",
		Name:        "natefinch/lumberjack",
		URL:         "github.com/natefinch/lumberjack",
		Tags:        []string{"logging", "golang", "file rotation", "performance", "log"},
		Description: "Lumberjack is a Go library for managing log file rotation. It provides a simple API for rotating log files based on size, age, or both, making it easy to manage log files in Go applications.",
	},
	{
		ID:          "84",
		Name:        "klauspost/compress",
		URL:         "github.com/klauspost/compress",
		Tags:        []string{"compression", "golang", "performance", "gzip", "zlib"},
		Description: "A Go library for compression and decompression of data. It provides a simple API for working with various compression formats like gzip, zlib, and snappy, making it easy to compress and decompress data in Go applications.",
	},
	{
		ID:          "85",
		Name:        "rosedblabs/rosedb",
		URL:         "github.com/rosedblabs/rosedb",
		Tags:        []string{"database", "golang", "key-value store", "embedded", "performance"},
		Description: "RoseDB is a high-performance, embedded key-value store for Go. It is designed for low latency and high throughput, making it ideal for applications that require fast access to large amounts of data. RoseDB supports various data structures like strings, lists, sets, and hashes, providing a flexible and efficient way to store and retrieve data.",
	},
	{
		ID:          "86",
		Name:        "mailru/easyjson",
		URL:         "github.com/mailru/easyjson",
		Tags:        []string{"JSON", "golang", "parser", "performance", "serialization"},
		Description: "EasyJSON is a Go library for fast JSON serialization and deserialization. It provides a simple API for working with JSON data, making it easy to convert Go structs to JSON and vice versa. EasyJSON is designed for high performance and low memory usage, making it ideal for applications that require fast JSON processing.",
	},
	{
		ID:          "87",
		Name:        "easegress-io/easegress",
		URL:         "github.com/easegress-io/easegress",
		Tags:        []string{"API gateway", "golang", "microservices", "security", "load balancing"},
		Description: "Easegress is an open-source API gateway and management platform for microservices. It provides a simple API for managing APIs, including features like authentication, rate limiting, and analytics.",
	},
	{
		ID:          "88",
		Name:        "xtaci/kcp-go",
		URL:         "github.com/xtaci/kcp-go",
		Tags:        []string{"KCP", "golang", "network", "performance", "UDP"},
		Description: "KCP-go is a Go implementation of the KCP protocol, which is designed for low-latency and high-throughput communication over unreliable networks. It provides a simple API for building network applications using KCP, making it easy to create fast and efficient network applications.",
	},
	{
		ID:          "89",
		Name:        "googleapis/google-api-go-client",
		URL:         "github.com/googleapis/google-api-go-client",
		Tags:        []string{"Google API", "golang", "client", "API", "Google Cloud"},
		Description: "The official Go client library for Google APIs. It provides a simple API for interacting with various Google services, including Google Cloud, Google Drive, and Google Sheets, making it easy to build applications that integrate with Google services.",
	},
	{
		ID:          "90",
		Name:        "AlecAivazis/survey/v2",
		URL:         "github.com/AlecAivazis/survey/v2",
		Tags:        []string{"CLI", "golang", "terminal", "TUI", "interactive"},
		Description: "Survey is a Go library for building interactive command-line applications. It provides a simple API for creating prompts, surveys, and questionnaires, making it easy to build user-friendly CLI applications.",
	},
	{
		ID:          "91",
		Name:        "anthonynsimon/bild",
		URL:         "github.com/anthonynsimon/bild",
		Tags:        []string{"image processing", "golang", "computer vision", "image manipulation"},
		Description: "Bild is a Go library for image processing and manipulation. It provides a simple API for working with images, including features like resizing, cropping, filtering, and drawing. Bild is designed for high performance and low memory usage, making it ideal for applications that require fast image processing.",
	},
	{
		ID:          "92",
		Name:        "yuin/goldmark",
		URL:         "github.com/yuin/goldmark",
		Tags:        []string{"Markdown", "golang", "parser", "renderer", "HTML"},
		Description: "Goldmark is a Markdown parser and renderer for Go. It provides a simple API for parsing and rendering Markdown documents, making it easy to convert Markdown to HTML and vice versa. Goldmark is designed for high performance and extensibility, allowing developers to customize the parsing and rendering process.",
	},
	{
		ID:          "93",
		Name:        "yggdrasil-network/yggdrasil-go",
		URL:         "github.com/yggdrasil-network/yggdrasil-go",
		Tags:        []string{"network", "golang", "peer-to-peer", "IPv6", "routing"},
		Description: "Yggdrasil is a peer-to-peer network protocol for IPv6. It provides a simple API for building distributed applications that require secure and efficient communication over the internet. Yggdrasil is designed for low latency and high throughput, making it ideal for applications that require fast and reliable communication.",
	},
	{
		ID:          "94",
		Name:        "alecthomas/participle/v2",
		URL:         "github.com/alecthomas/participle/v2",
		Tags:        []string{"parser", "golang", "DSL", "grammar", "syntax"},
		Description: "Participle is a Go library for building parsers and interpreters for domain-specific languages (DSLs). It provides a simple API for defining grammars and parsing input, making it easy to build custom parsers for various applications.",
	},
	{
		ID:          "95",
		Name:        "loov/lensm",
		URL:         "github.com/loov/lensm",
		Tags:        []string{"lens", "golang", "reflection", "code generation", "performance"},
		Description: "Lensm is a Go library for working with lenses, which are a functional programming concept for accessing and modifying nested data structures. It provides a simple API for creating and using lenses, making it easy to work with complex data structures in Go applications.",
	},
	{
		ID:          "96",
		Name:        "mark3labs/mcp-go",
		URL:         "github.com/mark3labs/mcp-go",
		Tags:        []string{"MCP", "golang", "LLM", "integration", "data sources", "tools"},
		Description: "A Go implementation of the Model Context Protocol (MCP), enabling seamless integration between LLM applications and external data sources and tools.",
	},
	{
		ID:          "97",
		Name:        "chrislusf/gleam",
		URL:         "github.com/chrislusf/gleam",
		Tags:        []string{"mapreduce", "golang", "distributed", "DAG", "in-memory"},
		Description: "Fast, efficient, and scalable distributed map/reduce system, DAG execution, in memory or on disk, written in pure Go, runs standalone or distributedly.",
	},
	{
		ID:          "98",
		Name:        "redis/rueidis",
		URL:         "github.com/redis/rueidis",
		Tags:        []string{"Redis", "golang", "client", "performance", "asynchronous"},
		Description: "Rueidis is a Redis client for Go that provides a simple and efficient way to interact with Redis databases. It is designed for high performance and low latency, making it ideal for applications that require fast access to Redis data. Rueidis supports both synchronous and asynchronous operations, allowing developers to choose the best approach for their applications.",
	},
	{
		ID:          "99",
		Name:        "ebitengine/purego",
		URL:         "github.com/ebitengine/purego",
		Tags:        []string{"purego", "golang", "Cgo", "performance", "cross-platform"},
		Description: "A library for calling C functions from Go without Cgo.",
	},
	{
		ID:          "100",
		Name:        "wasmerio/wasmer-go",
		URL:         "github.com/wasmerio/wasmer-go",
		Tags:        []string{"WebAssembly", "golang", "runtime", "sandbox", "performance"},
		Description: "Wasmer is a WebAssembly runtime for Go. It provides a simple API for loading and executing WebAssembly modules, making it easy to build applications that require a secure and efficient runtime environment. Wasmer is designed for high performance and low memory usage, making it ideal for applications that require fast execution of WebAssembly code.",
	},
	{
		ID:          "101",
		Name:        "q191201771/lal",
		URL:         "github.com/q191201771/lal",
		Tags:        []string{"RTMP", "golang", "streaming", "video", "audio"},
		Description: "LAL is a Go library for building RTMP (Real-Time Messaging Protocol) servers and clients. It provides a simple API for streaming video and audio, making it easy to build real-time streaming applications.",
	},
	{
		ID:          "102",
		Name:        "knadh/koanf",
		URL:         "github.com/knadh/koanf",
		Tags:        []string{"configuration", "golang", "parser", "JSON", "YAML", "TOML", "env"},
		Description: "Koanf is a lightweight and extensible configuration library for Go. It provides a simple API for loading and managing configuration data from various sources, including JSON, YAML, TOML, and environment variables. Koanf is designed for high performance and low memory usage, making it ideal for applications that require fast access to configuration data.",
	},
	{
		ID:          "103",
		Name:        "valyala/quicktemplate",
		URL:         "github.com/valyala/quicktemplate",
		Tags:        []string{"template", "golang", "performance", "HTML", "code generation"},
		Description: "QuickTemplate is a Go library for generating HTML and other text formats using templates. It provides a simple API for defining templates and generating output, with a focus on performance and low memory usage. QuickTemplate is designed for high throughput and low latency, making it ideal for applications that require fast template rendering.",
	},
	{
		ID:          "104",
		Name:        "reugn/go-quartz",
		URL:         "github.com/reugn/go-quartz",
		Tags:        []string{"scheduler", "golang", "cron", "job", "task"},
		Description: "A simple and efficient job scheduling library for Go. It provides a simple API for scheduling and executing jobs, making it easy to build applications that require periodic tasks and cron-like functionality.",
	},
	{
		ID:          "105",
		Name:        "maypok86/otter",
		URL:         "github.com/maypok86/otter",
		Tags:        []string{"otter", "golang", "LLM", "integration", "data sources", "tools"},
		Description: "Otter is a Go library for integrating LLM applications with external data sources and tools. It provides a simple API for managing data sources, tools, and workflows, making it easy to build applications that require seamless integration with various data sources and tools.",
	},
	{
		ID:          "106",
		Name:        "oschwald/geoip2-golang",
		URL:         "github.com/oschwald/geoip2-golang",
		Tags:        []string{"geoip", "golang", "database", "location", "IP"},
		Description: "A Go library for reading and writing GeoIP2 databases. It provides a simple API for accessing location data based on IP addresses, making it easy to build applications that require geolocation functionality.",
	},
	{
		ID:          "107",
		Name:        "lestrrat-go/jwx",
		URL:         "github.com/lestrrat-go/jwx",
		Tags:        []string{"lestrrat", "golang", "jwt", "jws", "jwk", "jwe"},
		Description: "Complete implementation of JWx (Javascript Object Signing and Encryption/JOSE) technologies for Go.",
	},
	{
		ID:          "108",
		Name:        "VictoriaMetrics/fastcache",
		URL:         "github.com/VictoriaMetrics/fastcache",
		Tags:        []string{"cache", "golang", "memory", "performance", "LRU"},
		Description: "Fastcache is a high-performance, memory-efficient cache library for Go. It is designed for low latency and high throughput, making it ideal for applications that require fast access to cached data. Fastcache uses a combination of LRU (Least Recently Used) eviction policy and memory pooling to optimize cache performance.",
	},
	{
		ID:          "109",
		Name:        "valyala/fastjson",
		URL:         "github.com/valyala/fastjson",
		Tags:        []string{"JSON", "golang", "parser", "performance", "serialization"},
		Description: "FastJSON is a Go library for fast JSON parsing and serialization. It provides a simple API for working with JSON data, making it easy to convert Go structs to JSON and vice versa. FastJSON is designed for high performance and low memory usage, making it ideal for applications that require fast JSON processing.",
	},
	{
		ID:          "110",
		Name:        "go-ldap/ldap",
		URL:         "github.com/go-ldap/ldap/v3",
		Tags:        []string{"LDAP", "golang", "directory", "authentication", "client"},
		Description: "A Go library for working with LDAP (Lightweight Directory Access Protocol). It provides a simple API for connecting to and interacting with LDAP servers, making it easy to build applications that require directory services and authentication.",
	},
	{
		ID:          "111",
		Name:        "pquerna/otp",
		URL:         "github.com/pquerna/otp",
		Tags:        []string{"OTP", "golang", "two-factor authentication", "security", "TOTP", "HOTP"},
		Description: "A Go library for generating and validating one-time passwords (OTPs) for two-factor authentication. It supports both TOTP (Time-based One-Time Password) and HOTP (HMAC-based One-Time Password) algorithms, making it easy to implement secure authentication in Go applications.",
	},
	{
		ID:          "112",
		Name:        "bits-and-blooms/bloom",
		URL:         "github.com/bits-and-blooms/bloom",
		Tags:        []string{"bloom filter", "golang", "data structure", "probabilistic", "set"},
		Description: "A Go implementation of Bloom filters, a space-efficient probabilistic data structure for testing whether an element is a member of a set. It provides a simple API for creating and using Bloom filters, making it easy to build applications that require efficient membership testing.",
	},
	{
		ID:          "113",
		Name:        "alecthomas/kong",
		URL:         "github.com/alecthomas/kong",
		Tags:        []string{"CLI", "golang", "command line", "parser", "TUI"},
		Description: "Kong is a command-line parser for Go. It provides a simple API for defining command-line arguments and flags, making it easy to build user-friendly command-line applications. Kong supports various features like subcommands, help generation, and validation, making it a powerful tool for building CLI applications.",
	},
	{
		ID:          "114",
		Name:        "karlseguin/ccache",
		URL:         "github.com/karlseguin/ccache",
		Tags:        []string{"cache", "golang", "memory", "performance", "LRU"},
		Description: "Ccache is a high-performance, memory-efficient cache library for Go. It is designed for low latency and high throughput, making it ideal for applications that require fast access to cached data. Ccache uses a combination of LRU (Least Recently Used) eviction policy and memory pooling to optimize cache performance.",
	},
	{
		ID:          "115",
		Name:        "cloudflare/circl",
		URL:         "github.com/cloudflare/circl",
		Tags:        []string{"cryptography", "golang", "security", "performance", "encryption"},
		Description: "CIRCL is a Go library for cryptography and security. It provides a simple API for working with various cryptographic algorithms and protocols, making it easy to implement secure communication and data protection in Go applications.",
	},
	{
		ID:          "116",
		Name:        "golang/snappy",
		URL:         "github.com/golang/snappy",
		Tags:        []string{"compression", "golang", "performance", "snappy", "decompression"},
		Description: "A Go implementation of the Snappy compression algorithm. It provides a simple API for compressing and decompressing data using Snappy, making it easy to integrate Snappy compression into Go applications.",
	},
	{
		ID:          "117",
		Name:        "cornelk/hashmap",
		URL:         "github.com/cornelk/hashmap",
		Tags:        []string{"hashmap", "golang", "data structure", "performance", "concurrent"},
		Description: "A concurrent hashmap implementation for Go, designed for high performance and low memory usage. It provides a simple API for working with hashmaps, making it easy to build applications that require efficient key-value storage.",
	},
	{
		ID:          "118",
		Name:        "warrant-dev/warrant",
		URL:         "github.com/warrant-dev/warrant",
		Tags:        []string{"authorization", "golang", "permissions", "roles", "security"},
		Description: "Warrant is a Go library for managing user permissions and roles. It provides a simple API for defining and enforcing access control policies, making it easy to build applications that require fine-grained authorization.",
	},
	{
		ID:          "119",
		Name:        "axiomhq/hyperloglog",
		URL:         "github.com/axiomhq/hyperloglog",
		Tags:        []string{"hyperloglog", "golang", "data structure", "probabilistic", "cardinality"},
		Description: "A Go implementation of the HyperLogLog algorithm for estimating the cardinality of large sets. It provides a simple API for creating and using HyperLogLog data structures, making it easy to build applications that require efficient cardinality estimation.",
	},
	{
		ID:          "120",
		Name:        "planetscale/vtprotobuf",
		URL:         "github.com/planetscale/vtprotobuf",
		Tags:        []string{"protobuf", "golang", "gRPC", "code generation", "performance"},
		Description: "vtprotobuf is a Go library for working with Protocol Buffers (protobuf) and gRPC. It provides a simple API for generating code, serializing and deserializing protobuf messages, and managing dependencies, making it easy to work with protobuf and gRPC in Go applications.",
	},
	{
		ID:          "121",
		Name:        "scylladb/gocqlx",
		URL:         "github.com/scylladb/gocqlx",
		Tags:        []string{"Cassandra", "golang", "client", "database", "ORM"},
		Description: "Gocqlx is a Go library for working with Cassandra databases. It provides a simple API for connecting to and interacting with Cassandra clusters, making it easy to build applications that require NoSQL data storage. Gocqlx supports various features like prepared statements, batching, and query building, making it a powerful tool for working with Cassandra in Go.",
	},
	{
		ID:          "122",
		Name:        "glebarez/go-sqlite",
		URL:         "github.com/glebarez/go-sqlite",
		Tags:        []string{"SQLite", "golang", "database", "ORM", "embedded"},
		Description: "A Go library for working with SQLite databases. It provides a simple API for connecting to and interacting with SQLite databases, making it easy to build applications that require embedded data storage. The library supports various features like transactions, prepared statements, and query building, making it a powerful tool for working with SQLite in Go.",
	},
	{
		ID:          "123",
		Name:        "jaswdr/faker",
		URL:         "github.com/jaswdr/faker",
		Tags:        []string{"faker", "golang", "data generation", "testing", "mock"},
		Description: "A Go library for generating fake data for testing and development purposes. It provides a simple API for creating random names, addresses, emails, and other types of data, making it easy to populate databases and test applications with realistic data.",
	},
	{
		ID:          "124",
		Name:        "RussellLuo/timingwheel",
		URL:         "github.com/RussellLuo/timingwheel",
		Tags:        []string{"timing wheel", "golang", "scheduler", "timer", "performance"},
		Description: "A Go library for implementing a timing wheel, a data structure for managing timers and scheduling tasks. It provides a simple API for creating and managing timers, making it easy to build applications that require precise timing and scheduling.",
	},
	{
		ID:          "125",
		Name:        "yapingcat/gomedia",
		URL:         "github.com/yapingcat/gomedia",
		Tags:        []string{"media", "golang", "video", "audio", "streaming"},
		Description: "A golang library for rtmp, mpeg-ts,mpeg-ps,flv,mp4,ogg,rtsp ",
	},
	{
		ID:          "126",
		Name:        "pires/go-proxyproto",
		URL:         "github.com/pires/go-proxyproto",
		Tags:        []string{"proxy", "golang", "network", "performance", "protocol"},
		Description: "A Go library for handling the PROXY protocol, which is used to pass connection information from a proxy server to a backend server. It provides a simple API for parsing and generating PROXY protocol headers, making it easy to integrate with proxy servers and load balancers.",
	},
	{
		ID:          "127",
		Name:        "Eyevinn/mp4ff",
		URL:         "github.com/Eyevinn/mp4ff",
		Tags:        []string{"MP4", "golang", "media", "video", "audio", "encryption", "decryption"},
		Description: "Library and tools for working with MP4 files containing video, audio, subtitles, or metadata. The focus is on fragmented files. Includes mp4ff-info, mp4ff-encrypt, mp4ff-decrypt and other tools. ",
	},
	{
		ID:          "128",
		Name:        "valkey-io/valkey-go",
		URL:         "github.com/valkey-io/valkey-go",
		Tags:        []string{"Valkey", "golang", "client", "cache", "performance"},
		Description: "A fast Golang Valkey client that supports Client Side Caching and Auto Pipelining.",
	},
	{
		ID:          "129",
		Name:        "microsoft/go-mssqldb",
		URL:         "github.com/microsoft/go-mssqldb",
		Tags:        []string{"MSSQL", "golang", "database", "client", "ORM"},
		Description: "A Go driver for Microsoft SQL Server. It provides a simple API for connecting to and interacting with MSSQL databases, making it easy to build applications that require relational data storage. The library supports various features like transactions, prepared statements, and query building, making it a powerful tool for working with MSSQL in Go.",
	},
	{
		ID:          "130",
		Name:        "Haivision/srtgo",
		URL:         "github.com/Haivision/srtgo",
		Tags:        []string{"SRT", "golang", "streaming", "video", "audio"},
		Description: "SRT (Secure Reliable Transport) is a transport protocol that optimizes streaming performance across unpredictable networks. It is designed to deliver high-quality, low-latency video and audio over the internet, making it ideal for live streaming applications. SRTgo is a Go library for working with SRT, providing a simple API for building SRT clients and servers.",
	},
	{
		ID:          "131",
		Name:        "scylladb/gocql",
		URL:         "github.com/scylladb/gocql",
		Tags:        []string{"Cassandra", "golang", "client", "database", "ORM"},
		Description: "A Go client library for Apache Cassandra and ScyllaDB. It provides a simple API for connecting to and interacting with Cassandra and ScyllaDB clusters, making it easy to build applications that require NoSQL data storage. The library supports various features like prepared statements, batching, and query building, making it a powerful tool for working with Cassandra and ScyllaDB in Go.",
	},
	{
		ID:          "132",
		Name:        "qdrant/go-client",
		URL:         "github.com/qdrant/go-client",
		Tags:        []string{"Qdrant", "golang", "vector search", "database", "client"},
		Description: "Qdrant is a vector search engine and database designed for high-performance similarity search and machine learning applications. The Go client provides a simple API for interacting with Qdrant, making it easy to build applications that require efficient vector search capabilities.",
	},
	{
		ID:          "133",
		Name:        "twpayne/pgx-geom",
		URL:         "github.com/twpayne/pgx-geom",
		Tags:        []string{"PostgreSQL", "golang", "geometry", "geospatial", "database"},
		Description: "A Go library for working with PostGIS geometries in PostgreSQL. It provides a simple API for encoding and decoding geometries, making it easy to build applications that require geospatial data storage and processing.",
	},
}
